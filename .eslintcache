[{"C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\index.js":"1","C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\App.js":"2","C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\reportWebVitals.js":"3","C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\redux\\store.js":"4","C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\redux\\reducer\\PostsDetailsReducer.js":"5","C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\redux\\action\\actionType.js":"6","C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\redux\\action\\ActionForPosts.js":"7","C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\services\\getAllPostsService.js":"8","C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\components\\fetchPostDetails.js":"9","C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\router\\fetchPostDeatilsRoute.js":"10","C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\redux\\reducer\\index.js":"11"},{"size":485,"mtime":1614185840000,"results":"12","hashOfConfig":"13"},{"size":321,"mtime":1614185754000,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":607,"mtime":1614183992000,"results":"16","hashOfConfig":"13"},{"size":522,"mtime":1614183904000,"results":"17","hashOfConfig":"13"},{"size":72,"mtime":1614183914000,"results":"18","hashOfConfig":"13"},{"size":492,"mtime":1614183574000,"results":"19","hashOfConfig":"13"},{"size":426,"mtime":1614183288000,"results":"20","hashOfConfig":"13"},{"size":6004,"mtime":1614186346000,"results":"21","hashOfConfig":"13"},{"size":569,"mtime":1614183486000,"results":"22","hashOfConfig":"13"},{"size":208,"mtime":1608702047251,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"12643hv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\index.js",[],["49","50"],"C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\App.js",[],"C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\reportWebVitals.js",[],["51","52"],"C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\redux\\store.js",[],"C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\redux\\reducer\\PostsDetailsReducer.js",[],"C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\redux\\action\\actionType.js",[],"C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\redux\\action\\ActionForPosts.js",[],"C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\services\\getAllPostsService.js",[],"C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\components\\fetchPostDetails.js",["53","54"],"//NPM package\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n//Redux Hooks\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Import React Table with CSS\r\nimport ReactTable from \"react-table-6\";\r\nimport \"react-table-6/react-table.css\";\r\n\r\n//material ui\r\nimport { Button } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//Router Modules\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//local file\r\nimport { PostsDetailsAction } from \"../redux/action/ActionForPosts\";\r\n\r\n//css style\r\nimport \"./style.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    margin: \"auto\",\r\n    width: \"fit-content\",\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst FetchPostDetails = (props) => {\r\n  //using Hooks\r\n  const [posts, setposts] = useState(0);\r\n  const [loading] = useState(\"Loading  Please Wait.....\");\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n\r\n  //modal instruction for opening and closing\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // get Time Interval\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        setTimeout(() => {\r\n          dispatch(PostsDetailsAction(posts));\r\n          setposts(posts + 1);\r\n        }, 10000);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }, [posts, dispatch]); //input values\r\n\r\n  //Get Current Post-------\r\n  const fetchdetails = useSelector((state) => {\r\n    return state.posts;\r\n  });\r\n  // console.log(\"fetch details post--\", fetchdetails);\r\n\r\n  return (\r\n    <div>\r\n      {/*=================== using React Table  =======================================*/}\r\n      <ReactTable\r\n        data={fetchdetails} //data\r\n        // Global Column Defaults\r\n        columns={[\r\n          {\r\n            columns: [\r\n              {\r\n                Header: () => <h5 className=\"row-design\">TITLE</h5>, // get the title\r\n                accessor: \"title\", // String-based value accessors!\r\n                filterable: true, // using for filter via search box\r\n                sortable: true,\r\n                //-------------------- - using css ----------------------------\r\n                style: {\r\n                  paddingBottom: \"25px\",\r\n                  paddingTop: \"20px\",\r\n                },\r\n              },\r\n              {\r\n                Header: () => <h5 className=\"row-design\">URL</h5>,\r\n                accessor: \"url\",\r\n                sortable: true,\r\n                style: {\r\n                  paddingBottom: \"25px\",\r\n                  paddingTop: \"20px\",\r\n                },\r\n              },\r\n              {\r\n                Header: () => <h5 className=\"row-design\">AUTHOR</h5>,\r\n                accessor: \"author\",\r\n                sortable: true,\r\n                // ------------------------ using css --------------------------\r\n                style: {\r\n                  paddingBottom: \"25px\",\r\n                  paddingTop: \"20px\",\r\n                },\r\n              },\r\n              {\r\n                Header: () => <h5 className=\"row-design\">CREATED_AT</h5>,\r\n                accessor: \"created_at\",\r\n                sortable: true,\r\n                filterable: true,\r\n                // ------------------------ using css --------------------------\r\n                style: {\r\n                  paddingBottom: \"25px\",\r\n                  paddingTop: \"20px\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n          //------------------ ROW INFO IN TABLE----------------------------\r\n          {\r\n            columns: [\r\n              {\r\n                Header: () => <h5 className=\"row-design\">ACTION</h5>,\r\n                Cell: (props) => {\r\n                  return (\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/\",\r\n                        data: props.original, //pass the data to rowOriginalDetails\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={handleClickOpen}\r\n                      >\r\n                        Row JSON Data\r\n                      </Button>\r\n                      <Dialog\r\n                        fullWidth={fullWidth}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"max-width-dialog-title\"\r\n                      >\r\n                        {/* ================== JSON FORMAT AND MODAL ===================== */}\r\n                        <DialogContent>\r\n                          <h2 style={{ color: \"purple\" }}>Raw JSON DATA</h2>\r\n\r\n                          {JSON.stringify(props.original)}\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button onClick={handleClose} style={{ color: \"purple\"}}>\r\n                            Close\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                    </Link>\r\n                  );\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n        defaultPageSize={10} //set the page number\r\n        className=\"-striped -highlight\"\r\n        noDataText={loading} //display the loading... on the screen\r\n        sortable={true} // sortable\r\n        // filterable={true} // searching column\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchPostDetails;\r\n","C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\router\\fetchPostDeatilsRoute.js",[],"C:\\Users\\chandni\\Desktop\\react-practices\\react-assignment\\pagination-assignment-03\\src\\redux\\reducer\\index.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"59"},{"ruleId":"57","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":47,"column":9,"nodeType":"63","messageId":"64","endLine":47,"endColumn":16},{"ruleId":"61","severity":1,"message":"65","line":49,"column":21,"nodeType":"63","messageId":"64","endLine":49,"endColumn":33},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'setFullWidth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]